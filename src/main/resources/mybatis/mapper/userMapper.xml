<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.example.exam.dao.UserMapper">
    <resultMap id="BaseResultMap" type="com.example.exam.Entity.User">
        <id column="user_id" property="id" jdbcType="INTEGER"/>
        <result column = "user_name" property = "username" />
        <result column = "user_password" property = "password"/>
        <result column="user_grade" property="grade"/>
        <result column = "user_class" property = "userClass" />
    </resultMap>

    <resultMap id="GradeResultMap" type="com.example.exam.Entity.ClassGrade">
        <result column="user_class" property="class_name"/>
        <result column = "avg" property = "AverageGrade" />
        <result column = "max" property = "maxGrade"/>
        <result column="min" property="minGrade"/>
    </resultMap>

    <resultMap id="DifficultyResultMap" type="com.example.exam.Entity.Difficulty">
        <result column="user_class" property="user_class"/>
        <result column = "all_user" property = "all_user" />
        <result column = "pass_user" property = "pass_user"/>
    </resultMap>

    <sql id="Base_Column_List">
        user_id,user_name,user_password,user_grade,user_class
    </sql>

    <select id="getUserById" parameterType="java.lang.String" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM UserInfo
        WHERE user_id=#{id}
    </select>

    <select id="getUser" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM UserInfo
        WHERE user_id=#{id} AND user_password=#{pwd}
    </select>

    <select id="getUserList" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List"/>
        FROM UserInfo
    </select>

    <insert id="add" parameterType="com.example.exam.Entity.User">
        INSERT INTO
        UserInfo
        (user_id,user_name,user_password,user_grade,user_class)
        VALUES
        (#{id},#{username},#{password},#{grade},#{userClass})
    </insert>

    <delete id="deleteById" parameterType="java.lang.String">
        DELETE FROM
        UserInfo
        WHERE
        user_id=#{id}
    </delete>

    <update id="update" parameterType="com.example.exam.Entity.User">
        UPDATE
        UserInfo
        SET
        user_name=#{username},
        user_password=#{password},
        user_grade=#{grade},
        user_class=#{userClass}
        WHERE
        user_id = #{id}
    </update>

    <select id="AnalysisUser" resultMap="GradeResultMap">
        select
        user_class,AVG(user_grade) as avg,
        MAX(user_grade) as max,
        Min(user_grade) as min from userinfo
        where user_class not like '%管理员%'
        group by user_class
    </select>

    <select id="AnalysisDiff" resultMap="DifficultyResultMap">
        select user_class,
        count(*) as all_user,
        sum(case when user_grade>=60 then 1 else 0 end) as pass_user
        from userinfo
        where user_class not like '%管理员%'
        group by user_class;
    </select>
</mapper>